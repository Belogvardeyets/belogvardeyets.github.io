name: Update IPTV Playlist

on:
  schedule:
    - cron: "0 6 * * *"   # каждый день в 06:00 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run playlist updater (inline)
        run: |
          python - <<'EOF'
          import requests

          SOURCE_URLS = [
              "https://raw.githubusercontent.com/blackbirdstudiorus/LoganetXIPTV/main/LoganetXAll.m3u",
              "https://smolnp.github.io/IPTVru//IPTVru.m3u",
              "https://iptv-org.github.io/iptv/index.m3u",
          ]

          TARGET_FILE = "test.m3u"
          CHANNEL_TAGS = ["ТНТ", "первый канал +4", "National Geographic"]

          def download_source(url):
              resp = requests.get(url)
              resp.raise_for_status()
              return resp.text

          def parse_channels(m3u_text):
              lines = m3u_text.splitlines()
              channels = []
              current_info = None
              for line in lines:
                  if line.startswith("#EXTINF"):
                      current_info = line
                  elif line.startswith("http"):
                      if current_info:
                          channels.append((current_info, line.strip()))
                          current_info = None
              return channels

          def filter_channels(channels, tags):
              result = []
              for info, url in channels:
                  for tag in tags:
                      if tag.lower() in info.lower():
                          result.append((info, url))
                          break
              return result

          def save_playlist(channels, target_file):
              with open(target_file, "w", encoding="utf-8") as f:
                  f.write("#EXTM3U\n")
                  for info, url in channels:
                      f.write(info + "\n")
                      f.write(url + "\n")

          all_channels = []
          for url in SOURCE_URLS:
              try:
                  text = download_source(url)
                  all_channels.extend(parse_channels(text))
                  print(f"✅ Загрузил из {url}")
              except Exception as e:
                  print(f"⚠️ Ошибка загрузки {url}: {e}")

          wanted = filter_channels(all_channels, CHANNEL_TAGS)
          if not wanted:
              print("❌ Каналы не найдены")
              exit(1)

          save_playlist(wanted, TARGET_FILE)
          print(f"✅ Обновлено {len(wanted)} каналов")

          EOF

      - name: Commit and push changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add test.m3u
          git commit -m "Auto update test.m3u" || echo "No changes"
          git pull --rebase origin main
          git push origin HEAD:main
