import requests
import os

# —Å–ø–∏—Å–æ–∫ raw-—Å—Å—ã–ª–æ–∫ –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã
SOURCE_URLS = [
    "https://raw.githubusercontent.com/blackbirdstudiorus/LoganetXIPTV/main/LoganetXAll.m3u",
    # –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë —Å—Å—ã–ª–∫–∏ —Å—é–¥–∞
    "https://smolnp.github.io/IPTVru//IPTVru.m3u",
    "https://iptv-org.github.io/iptv/index.m3u",
    # "https://example.com/playlist3.m3u",
]

# –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª (–∫—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç)
TARGET_FILE = "test.m3u"

# –∫–∞–∫–∏–µ –∫–∞–Ω–∞–ª—ã –∏—â–µ–º (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
CHANNEL_TAGS = ["–¢–ù–¢", "–ø–µ—Ä–≤—ã–π –∫–∞–Ω–∞–ª"]

def download_source(url):
    """–°–∫–∞—á–∏–≤–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç –ø–æ —Å—Å—ã–ª–∫–µ"""
    resp = requests.get(url)
    resp.raise_for_status()
    return resp.text

def parse_channels(m3u_text):
    """–ü–∞—Ä—Å–∏–º –≤—Å–µ –∫–∞–Ω–∞–ª—ã –∏–∑ .m3u"""
    lines = m3u_text.splitlines()
    channels = []
    current_info = None
    for line in lines:
        if line.startswith("#EXTINF"):
            current_info = line
        elif line.startswith("http"):
            if current_info:
                channels.append((current_info, line.strip()))
                current_info = None
    return channels

def filter_channels(channels, tags):
    """–§–∏–ª—å—Ç—Ä—É–µ–º –∫–∞–Ω–∞–ª—ã –ø–æ —Å–ø–∏—Å–∫—É —Ç–µ–≥–æ–≤"""
    result = []
    for info, url in channels:
        for tag in tags:
            if tag.lower() in info.lower():
                result.append((info, url))
                break  # —á—Ç–æ–±—ã –æ–¥–∏–Ω –∫–∞–Ω–∞–ª –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª—Å—è, –µ—Å–ª–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ–≥–æ–≤
    return result

def save_playlist(channels, target_file):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π .m3u"""
    with open(target_file, "w", encoding="utf-8") as f:
        f.write("#EXTM3U\n")
        for info, url in channels:
            f.write(info + "\n")
            f.write(url + "\n")

def main():
    all_channels = []

    # —Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–∞–Ω–∞–ª—ã —Å–æ –≤—Å–µ—Ö –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤
    for url in SOURCE_URLS:
        try:
            text = download_source(url)
            all_channels.extend(parse_channels(text))
            print(f"üì• –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ {url}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {url}: {e}")

    # —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ
    wanted = filter_channels(all_channels, CHANNEL_TAGS)

    if not wanted:
        print("‚ùå –ö–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    save_playlist(wanted, TARGET_FILE)
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {len(wanted)} –∫–∞–Ω–∞–ª(–æ–≤) –≤ {TARGET_FILE}")

if __name__ == "__main__":
    main()
